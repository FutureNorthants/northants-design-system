import React, { useContext } from 'react';
import { ThemeContext } from 'styled-components';

const MapMarker: React.FunctionComponent<google.maps.MarkerOptions> = (options) => {
  const [marker, setMarker] = React.useState<google.maps.Marker>();
  const themeContext = useContext(ThemeContext);

  const icon: google.maps.Symbol = {
    path: 'M32.237 10.023c-.092.011-.483.062-.862.113-3.26.431-6.52  2.046-8.913 4.415-2.61 2.584-4.197 5.904-4.577 9.57-.097.975-.04 3.072.121  4.08.328 2.114 1.052 4.2 2.294 6.58.851 1.632 1.633 2.924 4.244 7.004.88  1.371 1.943 3.105 2.587 4.216 2.272 3.91 4.117 7.944 5.446  11.9.2.606.322.782.62.93.507.237 1.116.095  1.375-.318.063-.102.23-.51.362-.907a62.26 62.26 0 0 1  4.169-9.497c1.19-2.21 2.03-3.604 4.433-7.378 1.748-2.743 2.3-3.638  2.944-4.789 1.645-2.912 2.547-5.304  2.927-7.763.15-.992.213-3.094.115-4.052-.155-1.473-.512-2.963-1.024-4.221-2.116-5.248-6.75-8.891-12.437-9.78-.575-.092-3.358-.165-3.824-.103Zm2.617  7.304c.109.023.264.051.345.063.58.085 1.391.334  1.955.606.207.096.385.181.402.187.207.062.288.102.288.142 0  .028.034.05.074.05.104 0 .857.51 1.26.856.534.46.874.81 1.253  1.298.11.142.213.266.23.283.023.017.12.182.23.369.11.187.213.351.23.368.023.017.098.153.167.312.069.153.167.345.207.425.098.187.414  1.133.448 1.348a.968.968 0 0 0 .064.227c.057.09.166 1.264.172 1.796a9.6  9.6 0 0 1-.132 1.502c-.035.17-.07.363-.08.425a.765.765 0 0  1-.087.232c-.034.068-.052.136-.029.153.018.023.006.068-.023.108a.707.707 0  0 0-.103.244c-.063.226-.07.25-.086.294a.22.22 0 0 0-.006.085c0  .029-.017.046-.046.046-.029 0-.063.08-.086.175a.95.95 0 0  1-.156.34c-.063.091-.097.165-.08.165.023  0-.017.068-.08.147-.07.085-.121.181-.121.227 0  .04-.023.08-.052.09-.023.006-.115.142-.201.3-.08.154-.15.256-.15.227-.006-.034-.034  0-.075.068-.276.488-1.397 1.581-2.07  2.012-.132.09-.293.198-.356.244a.388.388 0 0 1-.178.085c-.035  0-.098.04-.138.085-.04.045-.092.073-.115.056-.03-.017-.058-.005-.07.017-.017.046-.764.414-.88.431-.028.006-.304.09-.603.187a7.702  7.702 0 0 1-.747.21c-.11.017-.265.045-.345.062-.702.142-1.875.142-2.674  0-.092-.017-.247-.04-.345-.057-.178-.022-.247-.04-.604-.136-.61-.17-.719-.204-.747-.232a1.493  1.493 0 0 0-.282-.113 1.428 1.428 0 0 1-.374-.176 1.348 1.348 0 0  0-.328-.159 1.699 1.699 0 0 1-.43-.232c-.127-.09-.254-.17-.294-.17-.035  0-.075-.017-.086-.045-.006-.023-.173-.153-.363-.295-.414-.3-1.385-1.258-1.633-1.598-.741-1.037-1.328-2.278-1.472-3.105a4.148  4.148 0 0  0-.092-.414c-.028-.113-.04-.238-.023-.266.018-.029.006-.063-.023-.085-.028-.017-.057-.074-.057-.13-.046-1.497-.023-1.99.132-2.732.052-.266.328-1.162.408-1.332.409-.878.627-1.32.702-1.405.052-.05.08-.096.063-.096-.023  0 .04-.08.132-.176.092-.096.167-.198.167-.227  0-.028.04-.096.086-.153.754-.85 1.03-1.122  1.513-1.501.19-.148.373-.267.408-.267.034 0 .063-.028.063-.056  0-.034.04-.057.086-.057.04 0 .104-.034.127-.08a.234.234 0 0 1  .132-.101.586.586 0 0 0 .196-.12.746.746 0 0 1  .247-.13c.075-.022.132-.056.132-.085 0-.028.029-.05.063-.05.03 0  .202-.063.368-.142a4.68 4.68 0 0 1 .472-.176.635.635 0 0 0  .218-.085.218.218 0 0 1 .087-.04c.057 0 .38-.085.603-.153.627-.198  2.496-.294 3.192-.17ZM14.493 64.52c-.546.362-.656 1.088-.242  1.575.31.362-1.219.334 19.251.334 20.47 0 18.94.028  19.251-.334.414-.487.305-1.213-.241-1.576l-.196-.13H14.688l-.195.13Z',
    fillColor: `${themeContext.theme_vars.colours.action_dark}`,
    fillOpacity: 1,
    anchor: new google.maps.Point(40, 60),
    labelOrigin: new google.maps.Point(34, 30),
  };

  const mergedOptions: google.maps.MarkerOptions = {
    ...options,
    anchorPoint: new google.maps.Point(-5, -40),
    icon: icon,
    label: {
      text: typeof options.label === 'string' ? options.label : options.label.text,
      color: 'white',
    },
    position: options.position,
    title: options.title,
  };

  React.useEffect(() => {
    if (!marker) {
      setMarker(new google.maps.Marker());
    }

    // remove marker from map on unmount
    return () => {
      if (marker) {
        marker.setMap(null);
      }
    };
  }, [marker]);

  React.useEffect(() => {
    if (marker) {
      const infoWindow = new google.maps.InfoWindow({
        content: `<strong>${options.title}</strong>`,
        ariaLabel: options.title,
      });
      marker.setOptions(mergedOptions);
      marker.addListener('click', () => {
        infoWindow.open({
          anchor: marker,
          map: options.map,
        });
      });
    }
  }, [marker, options]);

  return null;
};

export default MapMarker;
